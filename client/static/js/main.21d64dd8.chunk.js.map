{"version":3,"sources":["components/FileUploads.js","components/Patients/Table.js","components/Patients/PatientsTable.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["FileUploads","props","getLastRecordOnSpreadsheets","a","axios","get","lastRecord","setState","isLoaded","fullName","data","response","apellido_y_nombre","documentNumber","numero_de_documento","doctor","medico_anestesista","date","fecha_de_consulta","replace","onChangeHandler","event","files","target","maxSelectFile","checkMimeType","filesList","document","getElementById","innerHTML","file","name","selectedFile","length","disabled","onClickHandler","submitButton","FormData","x","state","append","headers","post","status","submitResponse","msg","value","console","log","formatNotValidAlert","err","types","every","type","alert","querySelector","children","classList","remove","setTimeout","add","bind","this","error","message","md","method","action","className","htmlFor","id","defaultValue","onChange","multiple","small","muted","onClick","role","Component","columns","title","searchable","orderable","responsivePriority","doctorNewForm","Table","items","linkActions","url","attr","split","map","e","reverse","join","getRegisters","toClipboard","navigator","clipboard","writeText","refreshTooltip","$","find","DataTable","destroy","obra_social","numero_de_afiliado","form_response_edit_url","form_response_edit_url_m","$el","el","dom","ordering","pageLength","responsive","language","search","zeroRecords","initComplete","style","display","api","column","select","appendTo","on","val","fn","dataTable","util","escapeRegex","draw","href","unique","sort","each","d","j","color","size","onMouseOut","icon","data-order","width","ref","PatientsTable","Main","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.21d64dd8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {  MDBContainer, \n          MDBCol, \n          MDBRow, \n          MDBCard,\n          MDBCardBody,\n          MDBCardText,\n          MDBCardFooter } from \"mdbreact\";\nimport axios from 'axios';\nimport '../App.css';\n\nclass FileUploads extends Component{\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFile: null,\n      isLoaded: null,\n      fullName: null,\n      documentNumber: null, \n      doctor: null, \n      date: null,\n      submitResponse: null\n    }\n    this.onClickHandler = this.onClickHandler.bind(this);\n  }\n\n  componentDidMount() {\n    this.getLastRecordOnSpreadsheets();\n  }\n\n  getLastRecordOnSpreadsheets = async () => {\n    let lastRecord = await axios.get('api/Spreadsheets/getLastRegister');\n    this.setState({\n      isLoaded: true,\n      fullName: lastRecord.data.response.apellido_y_nombre,\n      documentNumber: lastRecord.data.response.numero_de_documento, \n      doctor: lastRecord.data.response.medico_anestesista, \n      date: lastRecord.data.response.fecha_de_consulta.replace(/\\//g,'-')\n    });\n  }\n\n  onChangeHandler = event => {\n    var files = event.target.files;\n    if (this.maxSelectFile(event) && this.checkMimeType(event)) {\n      let filesList = document.getElementById('filesList');\n      \n      filesList.innerHTML = '';\n      for (const file of files) {\n        filesList.innerHTML += `<li>${file.name}</li>`;\n      }\n\n      this.setState({\n        selectedFile: files\n      })\n\n      switch (files.length) {\n        case 1:\n          document.getElementById('submitButton').disabled = false;\n          break;\n        case 0:\n          document.getElementById('submitButton').disabled = true;\n          break;\n        default:\n          document.getElementById('submitButton').disabled = false;\n          break;\n      }\n\n    }\n  }\n\n  onClickHandler = async () => {\n    let submitButton = document.getElementById(\"submitButton\");\n    submitButton.disabled = true;\n    submitButton.innerHTML = `Cargando imágenes <div class=\"spinner-border spinner-border-sm\" role=\"status\"><span class=\"sr-only\">Loading...</span></div>`;\n    \n    const data = new FormData();\n\n    for (var x = 0; x < this.state.selectedFile.length; x++) {\n      data.append('file', this.state.selectedFile[x]);\n    }\n    \n    const headers = {\n      'content-type': 'multipart/form-data'\n    }\n    let response = await axios.post(`api/FileUploads/file-upload?fullName=${this.state.fullName}&documentNumber=${this.state.documentNumber}&doctor=${this.state.doctor}&date=${this.state.date}`, data, headers);\n    if (response.status === 200) {\n      this.setState({\n        submitResponse: true\n      })\n    } else {\n      this.setState({\n        submitResponse: false\n      })\n    }\n  }\n\n  maxSelectFile = (event) => {\n    let files = event.target.files;\n    if (files.length > 10) {\n      const msg = 'Solo puede subir 10 imágenes';\n      event.target.value = null;\n      console.log(msg);\n      this.formatNotValidAlert(msg);\n      return false;\n    }\n    return true;\n  }\n\n  checkMimeType = (event) => {\n    let files = event.target.files;\n    let err = '';\n    const types = ['image/png', 'image/jpeg', 'image/jpg'];\n    for (let x = 0; x < files.length; x++) {\n      if (types.every(type => files[x].type !== type)) {\n        err += `${files[x].type} no es un formato válido.`;\n      }\n    }\n    if (err !== '') {\n      event.target.value = null;\n      console.log(err);\n      this.formatNotValidAlert(\"El formato de imágen no es válido. Formatos válidos (png, jpg, jpeg)\");\n      return false;\n    }\n    return true;\n  }\n\n  formatNotValidAlert = (msg) => {\n    let alert = document.querySelector(\".mdbAlert\")\n    alert.children[0].innerHTML = msg;\n    alert.classList.remove('d-none');\n    setTimeout(() => { alert.classList.add('d-none') }, 4000);\n  }\n \n\n  render(){\n    const { error, isLoaded, submitResponse } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return (\n        <div>Cargando...\n          <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      );\n    } else if (submitResponse !== null) {\n      if (submitResponse) {\n        return <div>Se han subido correctamente las imágenes</div>;\n      } else {\n        return <div>Ha ocurrido un error al procesar el formulario</div>;\n      }\n    } else {\n      return (\n        <MDBContainer>\n          <MDBRow>\n            <MDBCol md=\"6\">\n              <form method=\"post\" action=\"#\">\n                <p className=\"h4 text-center mb-4\">Adjuntar Imágenes en Ficha Pacientes </p>\n                <label htmlFor=\"defaultFormRegister1\" className=\"grey-text\">\n                  Apellido y nombre\n                </label>\n                <input type=\"text\" id=\"defaultFormRegister1\" name=\"fullName\" className=\"form-control\" defaultValue={this.state.fullName} disabled/>\n                <br />\n                <label htmlFor=\"defaultFormRegister2\" className=\"grey-text\">\n                  Nro de documento\n                </label>\n                <input type=\"text\" id=\"defaultFormRegister2\" name=\"documentNumber\" className=\"form-control\" defaultValue={this.state.documentNumber} disabled/>\n                <br />\n                <label htmlFor=\"defaultFormRegister3\" className=\"grey-text\">\n                  Médico anestesísta\n                </label>\n                <input type=\"text\" id=\"defaultFormRegister3\" name=\"doctor\" className=\"form-control\" defaultValue={this.state.doctor} disabled/>\n                <br />\n                <label htmlFor=\"defaultFormRegister4\" className=\"grey-text\">\n                  Fecha de consulta\n                </label>\n                <input type=\"text\" id=\"defaultFormRegister4\" name=\"date\" className=\"form-control\" defaultValue={this.state.date} disabled/>\n                <br />\n\n                <MDBCard>\n                  <MDBCardBody>\n                    <MDBCardText>\n                      <label className=\"inputFileLabel\">\n\t\t\t                  <input type=\"file\" name=\"file\" onChange={this.onChangeHandler} multiple />Cargar imágenes\n                      </label>\n\t\t                  <ul id=\"filesList\"></ul>\n                    </MDBCardText>\n                  </MDBCardBody>\n                  <MDBCardFooter small muted id=\"footerUploads\">\n                    Únicamente PNG, JPG y JPEG.<br />\n                    Máximo 10 imágenes\n                  </MDBCardFooter>\n                </MDBCard>\n                <br />\n                \n                <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler} id=\"submitButton\">Subir Imágenes</button> \n              </form>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      )\n    }\n  }\n}\n\nexport default FileUploads;","import React, {Component} from 'react';\nimport { MDBBtn, MDBIcon } from \"mdbreact\";\nimport axios from 'axios';\nimport $ from 'jquery';\n\nimport 'datatables.net'\nimport 'datatables.net-responsive'\n\nconst columns = [\n  { \n    title: 'Fecha de consulta',\n    searchable: false,\n    orderable: true\n  },\n  { \n    title: 'Apellido y nombre',\n    searchable: true,\n    orderable: true\n  },\n  { \n    title: 'N° de documento',\n    searchable: true,\n    orderable: true\n  },\n  { \n    title: 'Obra social',\n    searchable: false,\n    orderable: true\n  },\n  { \n    title: 'N° de afiliado',\n    searchable: false,\n    orderable: true\n  },\n  { \n    title: 'Médico anestesista',\n    searchable: true,\n    orderable: true\n  },\n  {\n    title: '',\n    searchable: false,\n    orderable: false,\n    responsivePriority: 1\n  }\n];\n\n//const patientNewForm = ''\nconst doctorNewForm = 'https://docs.google.com/forms/d/e/1FAIpQLSc1lShphLLta13iZLL8X48QWM9288W64Pg-FiHTyyhiE87Ukg/viewform'//?entry.870843167=ARREDONDO+MARCELINO+20928601000\n\nexport class Table extends Component { \n\n  state = {\n    error: null,\n    isLoaded: false,\n    items: []\n  };\n  \n  componentDidMount() {\n    this.getRegisters();\n  }\n  \n  componentWillUnmount(){\n    $('.data-table-wrapper')\n      .find('table')\n      .DataTable()\n      .destroy(true);\n  }\n\n  componentDidUpdate(){\n    let data = this.state.items.map(({fecha_de_consulta, apellido_y_nombre, numero_de_documento, obra_social, numero_de_afiliado, medico_anestesista, form_response_edit_url, form_response_edit_url_m}) =>\n      [ fecha_de_consulta, \n        apellido_y_nombre, \n        numero_de_documento, \n        obra_social, \n        numero_de_afiliado, \n        medico_anestesista, \n        ` ${this.linkActions(form_response_edit_url, 'Formulario Paciente')}\n          ${this.linkActions(form_response_edit_url_m, 'Formulario Medico', {fecha_de_consulta, apellido_y_nombre, numero_de_documento, medico_anestesista})}`]\n    )\n    this.$el = $(this.el)\n    this.$el.DataTable({\n      dom: '<\"data-table-wrapper\"ft>',\n      data,\n      columns,\n      ordering: true,\n      pageLength: 100,\n      responsive: true,\n      language: {\n        search: 'Buscar Paciente',\n        zeroRecords: 'No se han encontrado resultados para tu búsqueda'\n      },\n      initComplete: function () {\n        document.getElementById('DataTables_Table_0').style.display = 'none'\n        document.getElementById('DataTables_Table_0_filter').style.display = 'none'\n        // eslint-disable-next-line\n        this.api().columns([5]).every( function () {\n            var column = this;\n            var select = $('<select><option value=\"\" disabled selected style=\"display:none;\"></option></select>')\n                .appendTo('#doctor_table_filter')\n                .on('change', function () {\n                  var val = $.fn.dataTable.util.escapeRegex($(this).val());\n                  column.search( val ? val : '', true, false ).draw();\n                  document.getElementById('DataTables_Table_0').style.display = 'table';\n                  document.getElementById('DataTables_Table_0_filter').style.display = 'block';\n                  document.getElementById('btnToDoctorNewForm').href = `${doctorNewForm}?entry.870843167=${val.replace(/ /g,\"+\")}`;\n                });\n            column.data().unique().sort().each( function ( d, j ) {\n                select.append( '<option value=\"'+d+'\">'+d+'</option>' )\n            });\n        });\n      }\n\n    })\n  }\n\n  linkActions = (url, title, attr = null) => {\n    if (url) {\n      return `<a href=\"${url}\" class=\"btn btn-sm btn-primary btn-block mb-1\" target=\"_blank\">${title}</a>`;\n    }\n    let { fecha_de_consulta, apellido_y_nombre, numero_de_documento, medico_anestesista } = attr;\n\n    fecha_de_consulta = fecha_de_consulta.split('/').map(e => (e.length === 1) ? `0${e}` : e).reverse().join('-');\n    apellido_y_nombre = apellido_y_nombre.replace(/ /g,\"+\");\n    medico_anestesista = medico_anestesista.replace(/ /g,\"+\");\n\n    url = `${doctorNewForm}?entry.905105377=${apellido_y_nombre}&entry.1361452324=${numero_de_documento}&entry.414077469=${fecha_de_consulta}&entry.870843167=${medico_anestesista}`;\n    return `<a href=\"${url}\" class=\"btn btn-sm btn-primary btn-block mb-1\" target=\"_blank\">${title} <span class=\"badge badge-secondary\">nuevo</span></a>`;\n  }\n\n  getRegisters = async () => {\n    try {\n      let items = await axios.get('api/Spreadsheets')\n      this.setState({ \n        isLoaded: true,\n        items: items.data.response\n      })\n    } catch (error) {\n      this.setState({ \n        isLoaded: true,\n        error\n      })\n    }\n  }\n\n  toClipboard = () => {\n    navigator.clipboard.writeText(\"https://forms.gle/JRKHLXMjQtzLDQvW7\");\n    let alert = document.querySelector(\".mdbAlert\")\n    alert.children[0].innerHTML = \"Se ha copiado la url del formulario al portapapeles, ahora puede compartirlo con su paciente.\";\n    alert.classList.remove('d-none');\n    setTimeout(() => { alert.classList.add('d-none') }, 4000);\n  }\n\n  refreshTooltip = () => {\n    let el = document.getElementById(\"btnToClipboard\");\n    el.title = \"Copiar en el portapapeles la url del formulario para enviar al paciente\";\n  }\n\n  render() {\n    const { error, isLoaded } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Cargando...</div>;\n    } else {\n      return (\n        <div>\n          <div className=\"row\">\n            <div id=\"doctor_table_filter\">Seleccionar Médico </div>\n\n            <MDBBtn color=\"secondary\" size=\"sm\" className=\"mt-0\" id=\"btnToClipboard\" onMouseOut={this.refreshTooltip.bind(this)} onClick={this.toClipboard.bind(this)} title=\"Copiar en el portapapeles la url del formulario para enviar al paciente\">\n              Copiar URL Formulario Paciente <MDBIcon icon=\"copy\" className=\"ml-1\" />\n            </MDBBtn>\n\n            <MDBBtn href=\"https://forms.gle/FqMpEQwLaFrX41TG6\" color=\"secondary\" size=\"sm\" className=\"mt-0 ml-1\" target=\"_blank\" id=\"btnToDoctorNewForm\" title=\"Nuevo formulario en otra pestaña del navegador\">\n              Formulario del Médico <MDBIcon icon=\"external-link-alt\" className=\"ml-1\" />\n            </MDBBtn>\n\n          </div>\n          <table data-order='[[ 0, \"desc\" ]]' className=\"table table-striped table-bordered dt-responsive nowrap\" style={{width:'100%'}} ref={ el => this.el= el }></table>\n        </div>\n      );\n    }\n  }\n}","import React, { Component } from 'react';\nimport '../../App.css';\nimport {Table} from \"./Table\";\n\nclass PatientsTable extends Component{\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"card border-light mb-3\">\n          <div className=\"card-header\">Consulta Preanestésica - Ficha Pacientes</div>\n          <div className=\"card-body\">\n            <Table />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PatientsTable;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport FileUploads from './FileUploads';\nimport PatientsTable from './Patients/PatientsTable';\nimport { MDBAlert } from \"mdbreact\";\n\nconst Main = () => (\n  <main>\n    <MDBAlert color=\"warning\" className=\"mb-3 d-none mdbAlert\">\n      <span>Alert</span>\n    </MDBAlert>\n    <Switch>\n      <Route exact path='/' component={PatientsTable}  />\n      <Route exact path='/file-uploads' component={FileUploads}  />\n    </Switch>\n  </main>\n)\n\nexport default Main;","import React from 'react';\nimport './App.css';\n/* import {Table} from \"./Table\";\nimport { MDBAlert } from \"mdbreact\"; */\nimport Main from './components/Main';\n\nfunction App() {\n\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}