{"version":3,"sources":["Table.js","App.js","serviceWorker.js","index.js"],"names":["columns","title","searchable","orderable","responsivePriority","doctorNewForm","Table","state","error","isLoaded","items","linkActions","url","attr","fecha_de_consulta","apellido_y_nombre","numero_de_documento","medico_anestesista","split","map","e","length","reverse","join","replace","getRegisters","a","axios","get","setState","data","response","toClipboard","navigator","clipboard","writeText","alert","document","querySelector","children","innerHTML","classList","remove","setTimeout","add","refreshTooltip","getElementById","this","$","find","DataTable","destroy","obra_social","numero_de_afiliado","form_response_edit_url","form_response_edit_url_m","$el","el","dom","ordering","responsive","language","search","zeroRecords","initComplete","style","display","api","every","column","select","appendTo","on","val","fn","dataTable","util","escapeRegex","draw","href","unique","sort","each","d","j","append","message","className","id","color","size","onMouseOut","bind","onClick","icon","target","data-order","width","ref","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.07d1e410.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { MDBBtn, MDBIcon } from \"mdbreact\";\nimport axios from 'axios';\nimport $ from 'jquery';\n\nimport 'datatables.net'\nimport 'datatables.net-responsive'\n\nconst columns = [\n  { \n    title: 'Fecha de consulta',\n    searchable: false,\n    orderable: true\n  },\n  { \n    title: 'Apellido y nombre',\n    searchable: true,\n    orderable: true\n  },\n  { \n    title: 'N° de documento',\n    searchable: true,\n    orderable: true\n  },\n  { \n    title: 'Obra social',\n    searchable: false,\n    orderable: true\n  },\n  { \n    title: 'N° de afiliado',\n    searchable: false,\n    orderable: true\n  },\n  { \n    title: 'Médico anestesista',\n    searchable: true,\n    orderable: true\n  },\n  {\n    title: '',\n    searchable: false,\n    orderable: false,\n    responsivePriority: 1\n  }\n];\n\n//const patientNewForm = ''\nconst doctorNewForm = 'https://docs.google.com/forms/d/e/1FAIpQLSc1lShphLLta13iZLL8X48QWM9288W64Pg-FiHTyyhiE87Ukg/viewform'//?entry.870843167=ARREDONDO+MARCELINO+20928601000\n\nexport class Table extends Component { \n\n  state = {\n    error: null,\n    isLoaded: false,\n    items: []\n  };\n  \n  componentDidMount() {\n    this.getRegisters();\n  }\n  \n  componentWillUnmount(){\n    $('.data-table-wrapper')\n      .find('table')\n      .DataTable()\n      .destroy(true);\n  }\n\n  componentDidUpdate(){\n    let data = this.state.items.map(({fecha_de_consulta, apellido_y_nombre, numero_de_documento, obra_social, numero_de_afiliado, medico_anestesista, form_response_edit_url, form_response_edit_url_m}) =>\n      [ fecha_de_consulta, \n        apellido_y_nombre, \n        numero_de_documento, \n        obra_social, \n        numero_de_afiliado, \n        medico_anestesista, \n        ` ${this.linkActions(form_response_edit_url, 'Formulario Paciente')}\n          ${this.linkActions(form_response_edit_url_m, 'Formulario Medico', {fecha_de_consulta, apellido_y_nombre, numero_de_documento, medico_anestesista})}`]\n    )\n    this.$el = $(this.el)\n    this.$el.DataTable({\n      dom: '<\"data-table-wrapper\"ft>',\n      data,\n      columns,\n      ordering: true,\n      responsive: true,\n      language: {\n        search: 'Buscar Paciente',\n        zeroRecords: 'No se han encontrado resultados para tu búsqueda'\n      },\n      initComplete: function () {\n        document.getElementById('DataTables_Table_0').style.display = 'none'\n        document.getElementById('DataTables_Table_0_filter').style.display = 'none'\n        // eslint-disable-next-line\n        this.api().columns([5]).every( function () {\n            var column = this;\n            var select = $('<select><option value=\"\" disabled selected style=\"display:none;\"></option></select>')\n                .appendTo('#doctor_table_filter')\n                .on('change', function () {\n                  var val = $.fn.dataTable.util.escapeRegex($(this).val());\n                  column.search( val ? val : '', true, false ).draw();\n                  document.getElementById('DataTables_Table_0').style.display = 'table';\n                  document.getElementById('DataTables_Table_0_filter').style.display = 'block';\n                  document.getElementById('btnToDoctorNewForm').href = `${doctorNewForm}?entry.870843167=${val.replace(/ /g,\"+\")}`;\n                });\n            column.data().unique().sort().each( function ( d, j ) {\n                select.append( '<option value=\"'+d+'\">'+d+'</option>' )\n            });\n        });\n      }\n\n    })\n  }\n\n  linkActions = (url, title, attr = null) => {\n    if (url) {\n      return `<a href=\"${url}\" class=\"btn btn-sm btn-primary btn-block mb-1\" target=\"_blank\">${title}</a>`;\n    }\n    let { fecha_de_consulta, apellido_y_nombre, numero_de_documento, medico_anestesista } = attr;\n\n    fecha_de_consulta = fecha_de_consulta.split('/').map(e => (e.length === 1) ? `0${e}` : e).reverse().join('-');\n    apellido_y_nombre = apellido_y_nombre.replace(/ /g,\"+\");\n    medico_anestesista = medico_anestesista.replace(/ /g,\"+\");\n\n    url = `${doctorNewForm}?entry.905105377=${apellido_y_nombre}&entry.1361452324=${numero_de_documento}&entry.414077469=${fecha_de_consulta}&entry.870843167=${medico_anestesista}`;\n    return `<a href=\"${url}\" class=\"btn btn-sm btn-primary btn-block mb-1\" target=\"_blank\">${title} <span class=\"badge badge-secondary\">nuevo</span></a>`;\n  }\n\n  getRegisters = async () => {\n    try {\n      let items = await axios.get('/api/Spreadsheets')\n      this.setState({ \n        isLoaded: true,\n        items: items.data.response\n      })\n    } catch (error) {\n      this.setState({ \n        isLoaded: true,\n        error\n      })\n    }\n  }\n\n  toClipboard = () => {\n    navigator.clipboard.writeText(\"https://forms.gle/JRKHLXMjQtzLDQvW7\");\n    let alert = document.querySelector(\".mdbAlert\")\n    alert.children[0].innerHTML = \"Se ha copiado la url del formulario al portapapeles, ahora puede compartirlo con su paciente.\";\n    alert.classList.remove('d-none');\n    setTimeout(() => { alert.classList.add('d-none') }, 4000);\n  }\n\n  refreshTooltip = () => {\n    let el = document.getElementById(\"btnToClipboard\");\n    el.title = \"Copiar en el portapapeles la url del formulario para enviar al paciente\";\n  }\n\n  render() {\n    const { error, isLoaded } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Cargando...</div>;\n    } else {\n      return (\n        <div>\n          <div className=\"row\">\n            <div id=\"doctor_table_filter\">Seleccionar Médico </div>\n\n            <MDBBtn color=\"secondary\" size=\"sm\" className=\"mt-0\" id=\"btnToClipboard\" onMouseOut={this.refreshTooltip.bind(this)} onClick={this.toClipboard.bind(this)} title=\"Copiar en el portapapeles la url del formulario para enviar al paciente\">\n              Copiar URL Formulario Paciente <MDBIcon icon=\"copy\" className=\"ml-1\" />\n            </MDBBtn>\n\n            <MDBBtn href=\"https://forms.gle/FqMpEQwLaFrX41TG6\" color=\"secondary\" size=\"sm\" className=\"mt-0 ml-1\" target=\"_blank\" id=\"btnToDoctorNewForm\" title=\"Nuevo formulario en otra pestaña del navegador\">\n              Formulario del Médico <MDBIcon icon=\"external-link-alt\" className=\"ml-1\" />\n            </MDBBtn>\n\n          </div>\n          <table data-order='[[ 0, \"desc\" ]]' className=\"table table-striped table-bordered dt-responsive nowrap\" style={{width:'100%'}} ref={ el => this.el= el }></table>\n        </div>\n      );\n    }\n  }\n}","import React from 'react';\nimport './App.css';\nimport {Table} from \"./Table\";\nimport { MDBAlert } from \"mdbreact\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <div className=\"card border-light mb-3\">\n        <div className=\"card-header\">Consulta Preanestésica - Ficha Pacientes</div>\n        <div className=\"card-body\">\n          <Table />\n        </div>\n        <MDBAlert color=\"success\" className=\"d-none mdbAlert\">\n          <span>Alert</span>\n        </MDBAlert>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}