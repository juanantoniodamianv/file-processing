{"version":3,"sources":["components/Files/FileElement.js","components/utils/Modal.js","components/FileUploads.js","components/utils/ImagesModal.js","components/Patients/Table.js","components/Patients/PatientsTable.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["FileElement","id","this","props","fileName","type","onClick","className","Component","ModalPage","keyboard","isOpen","size","FileUploads","getLastRecordOnSpreadsheets","a","axios","get","lastRecord","setState","isLoaded","fullName","data","response","apellido_y_nombre","documentNumber","numero_de_documento","doctor","medico_anestesista","date","fecha_de_consulta","replace","onChangeHandler","event","files","target","maxSelectFile","checkMimeType","maxFileSize","state","selectedFile","deleteFile","filteredFileList","filter","file","name","onClickHandler","length","formatNotValidAlert","submitButton","document","getElementById","disabled","innerHTML","FormData","x","append","post","status","submitResponse","msg","value","console","log","err","types","every","alert","querySelector","children","classList","remove","setTimeout","add","bind","error","message","Modal","md","method","action","htmlFor","defaultValue","onChange","multiple","color","Array","from","map","small","muted","role","ImagesModal","context","handleShow","handleClose","show","fileUrls","position","class","src","url","alt","columns","title","searchable","orderable","responsivePriority","doctorNewForm","Table","items","linkActionsGetImage","attr","linkActions","split","e","reverse","join","getRegisters","toClipboard","navigator","clipboard","writeText","refreshTooltip","modalRef","showModal","openModal","$","find","DataTable","destroy","obra_social","numero_de_afiliado","form_response_edit_url","form_response_edit_url_m","$el","el","dom","ordering","pageLength","responsive","language","search","zeroRecords","initComplete","style","display","api","column","select","appendTo","on","val","fn","dataTable","util","escapeRegex","draw","href","unique","sort","each","d","j","elements","getElementsByClassName","forEach","element","addEventListener","preventDefault","getAttribute","onMouseOut","icon","data-order","width","ref","PatientsTable","Main","exact","path","component","App","Boolean","window","location","hostname","match","defaults","baseURL","ReactDOM","render","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1b5ce9f9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass FileElement extends Component {\n  render() {\n    return <li id={this.props.fileName}>{this.props.fileName} <button type=\"button\" onClick={this.props.onClick} className=\"btn btn-deep-orange btn-sm waves-effect waves-light\">eliminar</button></li>\n  }\n}\n\nexport default FileElement;","import React, { Component } from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\n\nclass ModalPage extends Component {\n\nrender() {\n  return (\n    <MDBContainer>\n      <MDBModal keyboard={false} isOpen={true} size=\"lg\">\n        <MDBModalHeader>Sus estudios se han cargado correctamente</MDBModalHeader>\n        <MDBModalBody>\n          <p>Indicaciones para el día de la cirugía:</p>\n          <ul>\n            <li>8 hs de ayuno (nada de sólidos ni líquidos).</li>\n            <li>El día previo tomar la medicación habitual (NO ASPIRINAS).</li>\n            <li>Quitarse la prótesis dental antes de ir a quirofano.</li>\n            <li>No ir a quirofano con uñas pintadas.</li>\n          </ul>\n        </MDBModalBody>\n        <MDBModalFooter>\n          <p>Ahora puede cerrar este sitio</p>\n        </MDBModalFooter>\n      </MDBModal>\n    </MDBContainer>\n    );\n  }\n}\n\nexport default ModalPage;","import React, { Component } from 'react';\nimport {  MDBContainer, \n          MDBCol, \n          MDBRow, \n          MDBCard,\n          MDBCardBody,\n          MDBCardText,\n          MDBCardFooter,\n          MDBAlert } from \"mdbreact\";\nimport axios from 'axios';\nimport '../App.css';\nimport FileElement from './Files/FileElement';\nimport ModalPage from './utils/Modal';\n\n\nclass FileUploads extends Component{\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFile: null,\n      isLoaded: null,\n      fullName: null,\n      documentNumber: null, \n      doctor: null, \n      date: null,\n      submitResponse: null\n    }\n    this.onClickHandler = this.onClickHandler.bind(this);\n  }\n\n  componentDidMount() {\n    this.getLastRecordOnSpreadsheets();\n  }\n\n  getLastRecordOnSpreadsheets = async () => {\n    let lastRecord = await axios.get('api/Spreadsheets/getLastRegister');\n    this.setState({\n      isLoaded: true,\n      fullName: lastRecord.data.response.apellido_y_nombre,\n      documentNumber: lastRecord.data.response.numero_de_documento, \n      doctor: lastRecord.data.response.medico_anestesista, \n      date: lastRecord.data.response.fecha_de_consulta.replace(/\\//g,'-')\n    });\n  }\n\n  onChangeHandler = event => {\n    var files = event.target.files;\n    if (this.maxSelectFile(event) && this.checkMimeType(event) && this.maxFileSize(event)) {\n      if (!this.state.selectedFile) {\n        this.setState({\n          selectedFile: files\n        })\n      } else {\n        this.setState({selectedFile: [ ...this.state.selectedFile, ...files]});\n      }\n    }\n  }\n\n  deleteFile = (fileName) => {\n    const filteredFileList = [...this.state.selectedFile].filter(file => file.name !== fileName)\n    this.setState({\n      selectedFile: filteredFileList\n    });\n  }\n\n  onClickHandler = async () => {\n    if (!this.state.selectedFile || !this.state.selectedFile.length) {\n      this.formatNotValidAlert(\"Debe seleccionar al menos una imágen.\");\n      return;\n    }\n\n    let submitButton = document.getElementById(\"submitButton\");\n    submitButton.disabled = true;\n    submitButton.innerHTML = `Cargando imágenes <div class=\"spinner-border spinner-border-sm\" role=\"status\"><span class=\"sr-only\">Loading...</span></div>`;\n    \n    const data = new FormData();\n\n    for (var x = 0; x < this.state.selectedFile.length; x++) {\n      data.append('file', this.state.selectedFile[x]);\n    }\n    \n    let response = await axios.post(`api/FileUploads/file-upload?fullName=${this.state.fullName}&documentNumber=${this.state.documentNumber}&doctor=${this.state.doctor}&date=${this.state.date}`, data, {});\n    if (response.status === 200) {\n      this.setState({\n        submitResponse: true\n      })\n    } else {\n      this.setState({\n        submitResponse: false\n      })\n    }\n  }\n\n  maxSelectFile = (event) => {\n    let files = event.target.files;\n    if (files.length > 10) {\n      const msg = 'Solo puede subir 10 imágenes';\n      event.target.value = null;\n      console.log(msg);\n      this.formatNotValidAlert(msg);\n      return false;\n    }\n    return true;\n  }\n\n  checkMimeType = (event) => {\n    let files = event.target.files;\n    let err = '';\n    const types = ['image/png', 'image/jpeg', 'image/jpg'];\n    for (let x = 0; x < files.length; x++) {\n      if (types.every(type => files[x].type !== type)) {\n        err += `${files[x].type} no es un formato válido.`;\n      }\n    }\n    if (err !== '') {\n      event.target.value = null;\n      console.log(err);\n      this.formatNotValidAlert(\"El formato de imágen no es válido. Formatos válidos (png, jpg, jpeg)\");\n      return false;\n    }\n    return true;\n  }\n\n  maxFileSize = (event) => {\n    let files = event.target.files;\n    let err = '';\n    let maxSize = 2000000;\n    for (let x = 0; x < files.length; x++) {\n      if (files[x].size > maxSize) {\n        err += `${files[x].name} excede el tamaño permitido (2MB por archivo).`;\n      }\n    }\n    if (err !== '') {\n      event.target.value = null;\n      console.log(err);\n      this.formatNotValidAlert(\"El tamaño maximo permitido es de 2MB por imágen.\");\n      return false;\n    }\n    return true;\n  }\n\n  formatNotValidAlert = (msg) => {\n    let alert = document.querySelector(\".formatNotValidAlert\")\n    alert.children[0].innerHTML = msg;\n    alert.classList.remove('d-none');\n    setTimeout(() => { alert.classList.add('d-none') }, 8000);\n  }\n \n  render(){\n    let { error, isLoaded, submitResponse, selectedFile } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return (\n        <div>Cargando...\n          <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      );\n    } else if (submitResponse !== null) {\n      if (submitResponse) {\n        return <ModalPage />;\n      } else {\n        return <div>Ha ocurrido un error al procesar el formulario</div>;\n      }\n    } else {\n      return (\n        <MDBContainer>\n          <MDBRow>\n            <MDBCol md=\"6\">\n              <form method=\"post\" action=\"#\">\n                <p className=\"h4 text-center mt-4\">Adjuntar Estudios En Ficha Pacientes </p>\n                <p className=\"h6 text-center mb-4\">Aqui debe adjuntar los estudios de su último laboratorio (que contenga hemograma y coagulograma) y electrocardiograma completo con valoración.</p>\n                <label htmlFor=\"defaultFormRegister1\" className=\"grey-text\">\n                  Apellido y nombre\n                </label>\n                <input type=\"text\" id=\"defaultFormRegister1\" name=\"fullName\" className=\"form-control\" defaultValue={this.state.fullName} disabled/>\n                <br />\n                <label htmlFor=\"defaultFormRegister2\" className=\"grey-text\">\n                  Nro de documento\n                </label>\n                <input type=\"text\" id=\"defaultFormRegister2\" name=\"documentNumber\" className=\"form-control\" defaultValue={this.state.documentNumber} disabled/>\n                <br />\n                <label htmlFor=\"defaultFormRegister3\" className=\"grey-text\">\n                  Médico anestesísta\n                </label>\n                <input type=\"text\" id=\"defaultFormRegister3\" name=\"doctor\" className=\"form-control\" defaultValue={this.state.doctor} disabled/>\n                <br />\n                <label htmlFor=\"defaultFormRegister4\" className=\"grey-text\">\n                  Fecha de consulta\n                </label>\n                <input type=\"text\" id=\"defaultFormRegister4\" name=\"date\" className=\"form-control\" defaultValue={this.state.date} disabled/>\n                <br />\n\n                <MDBCard>\n                  <MDBCardBody>\n                    <MDBCardText>\n                      <label className=\"inputFileLabel\">\n\t\t\t                  <input type=\"file\" name=\"file\" onChange={this.onChangeHandler} multiple />Cargar estudios\n                      </label>\n                      <p><h6>Por favor, recuerde subir imágenes nítidas y de fácil lectura.</h6></p>\n                      <MDBAlert color=\"warning\" className=\"d-none formatNotValidAlert\">\n                        <span>Alert</span>\n                      </MDBAlert>\n\t\t                  <ul id=\"filesList\">\n                        {selectedFile &&  Array.from(selectedFile).map(file => {\n                          return <FileElement fileName={file.name} onClick={this.deleteFile.bind(this, file.name)}/>\n                        })}\n                      </ul>\n                    </MDBCardText>\n                  </MDBCardBody>\n                  <MDBCardFooter small muted id=\"footerUploads\">\n                    Únicamente imágenes (PNG, JPG y JPEG)<br />\n                    Máximo 10 imágenes<br />\n                    Tamaño máximo por imágen 2MB\n                  </MDBCardFooter>\n                </MDBCard>\n                <br />\n                \n                <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler} id=\"submitButton\">Subir estudios</button> \n              </form>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      )\n    }\n  }\n}\n\nexport default FileUploads;","import React, { Component } from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBRow, MDBCol } from 'mdbreact';\n\nclass ImagesModal extends Component {\n  constructor(props, context){\n    super(props, context);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.state = {\n        show: false,\n        fileUrls: {}\n    }\n  }\n\n  handleShow(fileUrls) {\n      this.setState({ \n        show: true,\n        fileUrls \n      })\n  }\n\n  handleClose(){\n      this.setState({ \n        show: false,\n        fileUrls: {}\n      })\n  }\n\n  render() {\n    return (\n      <MDBContainer>\n        <MDBModal isOpen={this.state.show} size=\"lg\" position=\"bottom\">\n          <MDBModalHeader>Estudios adjuntos</MDBModalHeader>\n          <MDBModalBody>\n            {this.state.fileUrls.length ? this.state.fileUrls.map(file => {\n              return (\n                <MDBRow className=\"mb-4\">\n                  <MDBCol md=\"12\">\n                    <div class=\"aspect-ratio-box\">\n                      <img src={file.url} className=\"img-fluid\" alt=\"\" />\n                    </div>\n                  </MDBCol>\n                </MDBRow>\n              )\n            })\n            : <p>El paciente no ha cargado ningun estudio</p>\n            }\n\n          </MDBModalBody>\n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={this.handleClose}>Cerrar</MDBBtn>\n          </MDBModalFooter>\n        </MDBModal>\n      </MDBContainer>\n      );\n    }\n}\n\nexport default ImagesModal;","import React, {Component} from 'react';\nimport { MDBBtn, MDBIcon } from \"mdbreact\";\nimport axios from 'axios';\nimport $ from 'jquery';\n\nimport 'datatables.net'\nimport 'datatables.net-responsive'\n\nimport ImagesModal from '../utils/ImagesModal';\n\nconst columns = [\n  { \n    title: 'Fecha de consulta',\n    searchable: false,\n    orderable: true\n  },\n  { \n    title: 'Apellido y nombre',\n    searchable: true,\n    orderable: true\n  },\n  { \n    title: 'N° de documento',\n    searchable: true,\n    orderable: true\n  },\n  { \n    title: 'Obra social',\n    searchable: false,\n    orderable: true\n  },\n  { \n    title: 'N° de afiliado',\n    searchable: false,\n    orderable: true\n  },\n  { \n    title: 'Médico anestesista',\n    searchable: true,\n    orderable: true\n  },\n  {\n    title: '',\n    searchable: false,\n    orderable: false,\n    responsivePriority: 1\n  }\n];\n\n//const patientNewForm = ''\nconst doctorNewForm = 'https://docs.google.com/forms/d/e/1FAIpQLSc1lShphLLta13iZLL8X48QWM9288W64Pg-FiHTyyhiE87Ukg/viewform'//?entry.870843167=ARREDONDO+MARCELINO+20928601000\n\nexport class Table extends Component { \n\n  state = {\n    error: null,\n    isLoaded: false,\n    items: []\n  };\n  \n  componentDidMount() {\n    this.getRegisters();\n  }\n  \n  componentWillUnmount(){\n    $('.data-table-wrapper')\n      .find('table')\n      .DataTable()\n      .destroy(true);\n  }\n\n  componentDidUpdate(){\n    let data = this.state.items.map(({fecha_de_consulta, apellido_y_nombre, numero_de_documento, obra_social, numero_de_afiliado, medico_anestesista, form_response_edit_url, form_response_edit_url_m}) =>\n      [ fecha_de_consulta, \n        apellido_y_nombre, \n        numero_de_documento, \n        obra_social, \n        numero_de_afiliado, \n        medico_anestesista, \n        ` ${this.linkActions(form_response_edit_url, 'Formulario Paciente')}\n          ${this.linkActions(form_response_edit_url_m, 'Formulario Medico', {fecha_de_consulta, apellido_y_nombre, numero_de_documento, medico_anestesista})}\n          ${this.linkActionsGetImage(numero_de_documento)}`]\n    )\n    this.$el = $(this.el)\n    this.$el.DataTable({\n      dom: '<\"data-table-wrapper\"ft>',\n      data,\n      columns,\n      ordering: true,\n      pageLength: 100,\n      responsive: true,\n      language: {\n        search: 'Buscar Paciente',\n        zeroRecords: 'No se han encontrado resultados para tu búsqueda'\n      },\n      initComplete: function () {\n        document.getElementById('DataTables_Table_0').style.display = 'none'\n        document.getElementById('DataTables_Table_0_filter').style.display = 'none'\n        // eslint-disable-next-line\n        this.api().columns([5]).every( function () {\n            var column = this;\n            var select = $('<select><option value=\"\" disabled selected style=\"display:none;\"></option></select>')\n                .appendTo('#doctor_table_filter')\n                .on('change', function () {\n                  var val = $.fn.dataTable.util.escapeRegex($(this).val());\n                  column.search( val ? val : '', true, false ).draw();\n                  document.getElementById('DataTables_Table_0').style.display = 'table';\n                  document.getElementById('DataTables_Table_0_filter').style.display = 'block';\n                  document.getElementById('btnToDoctorNewForm').href = `${doctorNewForm}?entry.870843167=${val.replace(/ /g,\"+\")}`;\n                });\n            column.data().unique().sort().each( function ( d, j ) {\n                select.append( '<option value=\"'+d+'\">'+d+'</option>' )\n            });\n        });\n      }\n\n    })\n    let elements = document.getElementsByClassName(\"verEstudiosBtn\");\n    Array.from(elements).forEach((element) => {\n      element.addEventListener('click', (event) => {\n        event.preventDefault();\n        this.openModal(element.getAttribute(\"data-document\"));\n      });\n    }) \n  }\n\n  linkActionsGetImage = (attr) => {\n    return `<a data-document=\"${attr}\" class=\"verEstudiosBtn btn btn-sm btn-primary btn-block mb-1\" target=\"_blank\">Ver estudios</a>`;\n  }\n\n  linkActions = (url, title, attr = null) => {\n    if (!url && !attr) {\n      return `<a href=\"#\" class=\"btn btn-sm btn-primary btn-block mb-1 disabled\" target=\"_blank\">${title}</a>`;\n    }\n    if (url) {\n      return `<a href=\"${url}\" class=\"btn btn-sm btn-primary btn-block mb-1\" target=\"_blank\">${title}</a>`;\n    }\n    let { fecha_de_consulta, apellido_y_nombre, numero_de_documento, medico_anestesista } = attr;\n    console.log(apellido_y_nombre)\n    fecha_de_consulta = fecha_de_consulta.split('/').map(e => (e.length === 1) ? `0${e}` : e).reverse().join('-');\n    apellido_y_nombre = apellido_y_nombre.replace(/ /g,\"+\");\n    medico_anestesista = medico_anestesista.replace(/ /g,\"+\");\n\n    url = `${doctorNewForm}?entry.905105377=${apellido_y_nombre}&entry.1361452324=${numero_de_documento}&entry.414077469=${fecha_de_consulta}&entry.870843167=${medico_anestesista}`;\n    return `<a href=\"${url}\" class=\"btn btn-sm btn-primary btn-block mb-1\" target=\"_blank\">${title} <span class=\"badge badge-secondary\">nuevo</span></a>`;\n  }\n\n  getRegisters = async () => {\n    try {\n      let items = await axios.get('api/Spreadsheets')\n      this.setState({ \n        isLoaded: true,\n        items: items.data.response\n      })\n    } catch (error) {\n      this.setState({ \n        isLoaded: true,\n        error\n      })\n    }\n  }\n\n  toClipboard = () => {\n    navigator.clipboard.writeText(\"https://forms.gle/JRKHLXMjQtzLDQvW7\");\n    let alert = document.querySelector(\".mdbAlert\")\n    alert.children[0].innerHTML = \"Se ha copiado la url del formulario al portapapeles, ahora puede compartirlo con su paciente.\";\n    alert.classList.remove('d-none');\n    setTimeout(() => { alert.classList.add('d-none') }, 4000);\n  }\n\n  refreshTooltip = () => {\n    let el = document.getElementById(\"btnToClipboard\");\n    el.title = \"Copiar en el portapapeles la url del formulario para enviar al paciente\";\n  }\n\n  modalRef = ({handleShow}) => {\n    this.showModal = handleShow;\n  }\n \n  openModal = async (documentNumber) => {\n    let fileUrls = await axios.get(`api/FileUploads/get-files?documentNumber=${documentNumber}`);\n    this.showModal(fileUrls.data);\n  }\n\n  render() {\n    const { error, isLoaded } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Cargando...</div>;\n    } else {\n      return (\n        <div>\n          <div className=\"row\">\n            <div id=\"doctor_table_filter\">Seleccionar Médico </div>\n\n            <MDBBtn color=\"secondary\" size=\"sm\" className=\"mt-0\" id=\"btnToClipboard\" onMouseOut={this.refreshTooltip.bind(this)} onClick={this.toClipboard.bind(this)} title=\"Copiar en el portapapeles la url del formulario para enviar al paciente\">\n              Copiar URL Formulario Paciente <MDBIcon icon=\"copy\" className=\"ml-1\" />\n            </MDBBtn>\n\n            <MDBBtn href=\"https://forms.gle/FqMpEQwLaFrX41TG6\" color=\"secondary\" size=\"sm\" className=\"mt-0 ml-1\" target=\"_blank\" id=\"btnToDoctorNewForm\" title=\"Nuevo formulario en otra pestaña del navegador\">\n              Formulario del Médico <MDBIcon icon=\"external-link-alt\" className=\"ml-1\" />\n            </MDBBtn>\n\n          </div>\n          <table data-order='[[ 0, \"desc\" ]]' className=\"table table-striped table-bordered dt-responsive nowrap\" style={{width:'100%'}} ref={ el => this.el= el }></table>\n          <ImagesModal ref={this.modalRef}/>\n        </div>\n      );\n    }\n  }\n}","import React, { Component } from 'react';\nimport '../../App.css';\nimport {Table} from \"./Table\";\n\nclass PatientsTable extends Component{\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"card border-light mb-3\">\n          <div className=\"card-header\">Consulta Preanestésica - Ficha Pacientes</div>\n          <div className=\"card-body\">\n            <Table />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PatientsTable;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport FileUploads from './FileUploads';\nimport PatientsTable from './Patients/PatientsTable';\nimport { MDBAlert } from \"mdbreact\";\n\nconst Main = () => (\n  <main>\n    <MDBAlert color=\"warning\" className=\"d-none mdbAlert\">\n      <span>Alert</span>\n    </MDBAlert>\n    <Switch>\n      <Route exact path='/' component={PatientsTable}  />\n      <Route exact path='/file-uploads' component={FileUploads}  />\n    </Switch>\n  </main>\n)\n\nexport default Main;","import React from 'react';\nimport './App.css';\n/* import {Table} from \"./Table\";\nimport { MDBAlert } from \"mdbreact\"; */\nimport Main from './components/Main';\n\nfunction App() {\n\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\n\nif (process.env.NODE_ENV === 'production') {\n  axios.defaults.baseURL = '/';\n} else {\n  axios.defaults.baseURL = 'http://localhost:3000';\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}